{"ast":null,"code":"var _jsxFileName = \"/Users/Tar/github/learning/react/06-challenge/src/HeroTextImput.js\",\n    _s = $RefreshSig$();\n\nimport { useField } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HeroTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-text\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(HeroTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = HeroTextInput;\nexport default HeroTextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroTextInput\");","map":{"version":3,"sources":["/Users/Tar/github/learning/react/06-challenge/src/HeroTextImput.js"],"names":["useField","HeroTextInput","label","props","field","meta","id","name","touched","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAACG,KAAD,CAA9B;AACE,sBACE;AAAA,4BAEA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFA,eAIE;AAAO,MAAA,OAAO,EAAEA,KAAK,CAACG,EAAN,IAAYH,KAAK,CAACI,IAAlC;AAAA,gBAAyCL;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA,SAAoCE,KAApC;AAAA,SAA+CD;AAA/C;AAAA;AAAA;AAAA;AAAA,YANF,EAOGE,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAArB,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4BJ,IAAI,CAACI;AAAjC;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IATN;AAAA,kBADF;AAcD,CAhBH;;GAAMR,a;UACkBD,Q;;;KADlBC,a;AAkBJ,eAAeA,aAAf","sourcesContent":["import { useField } from 'formik'\n\nconst HeroTextInput = ({ label, ...props }) => { \n  const [field, meta] = useField(props)  \n    return (\n      <>\n            \n      <div className=\"mb-3\"></div>\n\n        <label htmlFor={props.id || props.name}>{label}</label>\n      \n        <input className=\"form-control\" {...field} {...props}/> \n        {meta.touched && meta.error ? (\n          <div className=\"form-text\">{meta.error}</div>\n        ) : null }\n        \n      </>\n    ) \n  }\n\n  export default HeroTextInput"]},"metadata":{},"sourceType":"module"}