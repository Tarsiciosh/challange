{"ast":null,"code":"var _jsxFileName = \"/Users/Tar/github/challange/src/HeroMain.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport HerosGrid from './HerosGrid';\nimport HerosPowerStats from './HerosPowerStats';\nimport HeroSearch from './HeroSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst myHerosToken = '102141048846123';\n\nconst mainPage = () => {\n  {\n    !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '3rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"display-5\",\n        children: [\" \", title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(HerosGrid, {\n        heros: heros,\n        herosId: herosId,\n        setHerosId: setHerosId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HerosPowerStats, {\n        heros: heros\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeroSearch, {\n        token: myHerosToken,\n        heros: heros,\n        herosId: herosId,\n        setHerosId: setHerosId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-6\",\n      style: {\n        margin: '1rem'\n      },\n      children: \"cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this);\n  }\n};\n\nconst HeroMain = ({\n  title\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [herosId, setHerosId] = useState([644]);\n  const [heros, setHeros] = useState([]);\n  useEffect(() => {\n    async function getHerosInfo() {\n      try {\n        var fetchedHeros = [];\n\n        for (var i = 0; i < herosId.length; i++) {\n          var response = await axios.get(`https://superheroapi.com/api/${myHerosToken}/${herosId[i]}/`);\n          fetchedHeros = [...fetchedHeros, response.data];\n        }\n\n        setHeros(fetchedHeros);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getHerosInfo();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(HeroMain, \"jSqIDN8Gt0siIMcVCDBp7SICkow=\");\n\n_c = HeroMain;\nexport default HeroMain;\n/*\n { !isLoading ? (\n        <div style={{margin:'3rem'}}> \n          <p className=\"display-5\"> {title} </p>\n            <HerosGrid heros={heros} herosId={herosId} setHerosId={setHerosId} />\n            <HerosPowerStats heros={heros}/> \n            <HeroSearch token={token} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n        </div> \n        ) : ( < )\n      }\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroMain\");","map":{"version":3,"sources":["/Users/Tar/github/challange/src/HeroMain.js"],"names":["useState","useEffect","axios","HerosGrid","HerosPowerStats","HeroSearch","myHerosToken","mainPage","isLoading","margin","title","heros","herosId","setHerosId","HeroMain","setIsLoading","setHeros","getHerosInfo","fetchedHeros","i","length","response","get","data","error","console"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,YAAY,GAAG,iBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB;AAAE,KAACC,SAAD,gBACA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,wBAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEC,KAAlB;AAAyB,QAAA,OAAO,EAAEC,OAAlC;AAA2C,QAAA,UAAU,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEL,YAAnB;AAAiC,QAAA,KAAK,EAAEK,KAAxC;AAA+C,QAAA,OAAO,EAAEC,OAAxD;AAAiE,QAAA,UAAU,EAAEC;AAA7E;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAOK;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAE;AAACJ,QAAAA,MAAM,EAAC;AAAR,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPL;AAQD;AACF,CAVD;;AAcA,MAAMK,QAAQ,GAAG,CAAC;AAACJ,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC5B,QAAM,CAACF,SAAD,EAAYO,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAC,GAAD,CAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQK,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,YAAf,GAA+B;AAC7B,UAAI;AACF,YAAIC,YAAY,GAAG,EAAnB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEP,OAAO,CAACQ,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,cAAIE,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAClB,gCAA+BhB,YAAa,IAAGM,OAAO,CAACO,CAAD,CAAI,GADxC,CAArB;AAGAD,UAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBG,QAAQ,CAACE,IAA3B,CAAf;AACD;;AACDP,QAAAA,QAAQ,CAACE,YAAD,CAAR;AACAH,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAVD,CAUE,OAAOS,KAAP,EAAa;AACbC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;;AACDP,IAAAA,YAAY;AACb,GAjBQ,CAAT;AAmBA,sBACE,qCADF;AAKD,CA7BD;;GAAMH,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport HerosGrid from './HerosGrid'\nimport HerosPowerStats from './HerosPowerStats'\nimport HeroSearch from './HeroSearch'\n\nconst myHerosToken = '102141048846123'\n\nconst mainPage = () => {\n  { !isLoading ? (\n    <div style={{margin:'3rem'}}> \n      <p className=\"display-5\"> {title} </p>\n        <HerosGrid heros={heros} herosId={herosId} setHerosId={setHerosId} />\n        <HerosPowerStats heros={heros}/> \n        <HeroSearch token={myHerosToken} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n    </div> \n    ) : (<p className=\"display-6\" style={{margin:'1rem'}}>cargando...</p>)\n  }\n}\n\n\n\nconst HeroMain = ({title}) => { \n  const [isLoading, setIsLoading] = useState(true)\n  const [herosId, setHerosId] = useState([644])\n  const [heros, setHeros] = useState([])\n\n  useEffect(() => { \n    async function getHerosInfo () {   \n      try {      \n        var fetchedHeros = []\n        for (var i = 0; i< herosId.length; i++){\n          var response = await axios.get(\n            `https://superheroapi.com/api/${myHerosToken}/${herosId[i]}/`\n          )\n          fetchedHeros = [...fetchedHeros, response.data]\n        }\n        setHeros(fetchedHeros)\n        setIsLoading(false) \n      } catch (error){\n        console.error(error)\n      }\n    }\n    getHerosInfo()   \n  })\n\n  return (        \n    <>\n     \n    </>\n  )\n}\n\nexport default HeroMain\n\n/*\n { !isLoading ? (\n        <div style={{margin:'3rem'}}> \n          <p className=\"display-5\"> {title} </p>\n            <HerosGrid heros={heros} herosId={herosId} setHerosId={setHerosId} />\n            <HerosPowerStats heros={heros}/> \n            <HeroSearch token={token} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n        </div> \n        ) : ( < )\n      }\n*/"]},"metadata":{},"sourceType":"module"}