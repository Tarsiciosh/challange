{"ast":null,"code":"var _jsxFileName = \"/Users/Tar/github/learning/react/06-challenge/src/HerosPowerStats.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport HeroPowerStat from \"./HeroPowerStat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HerosPowerStats = ({\n  heros\n}) => {\n  _s();\n\n  const [ps, setPs] = useState([]);\n  useEffect(() => {\n    let newPs = {\n      intelligence: 0,\n      strength: 0,\n      speed: 0,\n      durability: 0,\n      power: 0,\n      combat: 0\n    };\n    heros.forEach(hero => {\n      newPs.intelligence = newPs.intelligence + parseInt(hero.powerstats.intelligence);\n      newPs.strength = newPs.strength + parseInt(hero.powerstats.strength);\n      newPs.speed = newPs.speed + parseInt(hero.powerstats.speed);\n      newPs.durability = newPs.durability + parseInt(hero.powerstats.durability);\n      newPs.power = newPs.power + parseInt(hero.powerstats.power);\n      newPs.combat = newPs.combat + parseInt(hero.powerstats.combat);\n    });\n    var statsArray = [];\n\n    for (property in newPs) {\n      statsArray = [...statsArray, {\n        stat: property,\n        value: newPs[property]\n      }];\n    }\n\n    statsArray.sort((a, b) => b.value - a.value);\n    setPs(statsArray);\n  }, [heros]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-6\",\n      children: \" PowerStats grupales: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      style: {\n        width: \"20rem\"\n      },\n      children: ps.map(p => /*#__PURE__*/_jsxDEV(HeroPowerStat, {\n        data: p\n      }, p.stat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HerosPowerStats, \"bDpp/WCm8WeKwpvRd2opqbx1DHc=\");\n\n_c = HerosPowerStats;\nexport default HerosPowerStats;\n/*\n  <li className=\"list-group-item\"> {`Inteligence: ${ps.intelligence.toString()}`} </li>\n  <li className=\"list-group-item\"> {`Strength: ${ps.strength.toString()}`}</li>     \n  <li className=\"list-group-item\"> {`Speed: ${ps.speed.toString()}`}</li>\n  <li className=\"list-group-item\"> {`Durability: ${ps.durability.toString()}`}</li>\n  <li className=\"list-group-item\"> {`Power: ${ps.power.toString()}`}</li>\n  <li className=\"list-group-item\"> {`Combat: ${ps.combat.toString()}`}</li>  \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HerosPowerStats\");","map":{"version":3,"sources":["/Users/Tar/github/learning/react/06-challenge/src/HerosPowerStats.js"],"names":["useState","useEffect","HeroPowerStat","HerosPowerStats","heros","ps","setPs","newPs","intelligence","strength","speed","durability","power","combat","forEach","hero","parseInt","powerstats","statsArray","property","stat","value","sort","a","b","width","map","p"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAEnC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAE,EAAF,CAA5B;AAEAC,EAAAA,SAAS,CAAG,MAAM;AAChB,QAAIM,KAAK,GAAG;AACVC,MAAAA,YAAY,EAAE,CADJ;AAEVC,MAAAA,QAAQ,EAAE,CAFA;AAGVC,MAAAA,KAAK,EAAG,CAHE;AAIVC,MAAAA,UAAU,EAAG,CAJH;AAKVC,MAAAA,KAAK,EAAG,CALE;AAMVC,MAAAA,MAAM,EAAG;AANC,KAAZ;AASAT,IAAAA,KAAK,CAACU,OAAN,CAAcC,IAAI,IAAI;AACpBR,MAAAA,KAAK,CAACC,YAAN,GAAqBD,KAAK,CAACC,YAAN,GAAqBQ,QAAQ,CAACD,IAAI,CAACE,UAAL,CAAgBT,YAAjB,CAAlD;AACAD,MAAAA,KAAK,CAACE,QAAN,GAAiBF,KAAK,CAACE,QAAN,GAAiBO,QAAQ,CAACD,IAAI,CAACE,UAAL,CAAgBR,QAAjB,CAA1C;AACAF,MAAAA,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACG,KAAN,GAAcM,QAAQ,CAACD,IAAI,CAACE,UAAL,CAAgBP,KAAjB,CAApC;AACAH,MAAAA,KAAK,CAACI,UAAN,GAAmBJ,KAAK,CAACI,UAAN,GAAmBK,QAAQ,CAACD,IAAI,CAACE,UAAL,CAAgBN,UAAjB,CAA9C;AACAJ,MAAAA,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACK,KAAN,GAAcI,QAAQ,CAACD,IAAI,CAACE,UAAL,CAAgBL,KAAjB,CAApC;AACAL,MAAAA,KAAK,CAACM,MAAN,GAAeN,KAAK,CAACM,MAAN,GAAeG,QAAQ,CAACD,IAAI,CAACE,UAAL,CAAgBJ,MAAjB,CAAtC;AACD,KAPD;AASA,QAAIK,UAAU,GAAG,EAAjB;;AAEA,SAAMC,QAAN,IAAkBZ,KAAlB,EAAwB;AACtBW,MAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAe;AAC1BE,QAAAA,IAAI,EAAED,QADoB;AAE1BE,QAAAA,KAAK,EAAEd,KAAK,CAACY,QAAD;AAFc,OAAf,CAAb;AAID;;AACDD,IAAAA,UAAU,CAACI,IAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAAUA,CAAC,CAACH,KAAF,GAAUE,CAAC,CAACF,KAAtC;AAEAf,IAAAA,KAAK,CAACY,UAAD,CAAL;AAED,GA/BQ,EA+BP,CAACd,KAAD,CA/BO,CAAT;AAiCA,sBACE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,YAAd;AAA2B,MAAA,KAAK,EAAE;AAACqB,QAAAA,KAAK,EAAE;AAAR,OAAlC;AAAA,gBACGpB,EAAE,CAACqB,GAAH,CAAOC,CAAC,iBACP,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEA;AAArB,SAA6BA,CAAC,CAACP,IAA/B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD,CA/CD;;GAAMjB,e;;KAAAA,e;AAiDN,eAAeA,eAAf;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState, useEffect } from \"react\";\nimport HeroPowerStat from \"./HeroPowerStat\";\n\nconst HerosPowerStats = ({heros}) => {\n\n  const [ps, setPs] = useState ([])\n  \n  useEffect ( () => {\n    let newPs = {\n      intelligence: 0, \n      strength: 0, \n      speed : 0, \n      durability : 0, \n      power : 0, \n      combat : 0\n    }\n\n    heros.forEach(hero => {\n      newPs.intelligence = newPs.intelligence + parseInt(hero.powerstats.intelligence)\n      newPs.strength = newPs.strength + parseInt(hero.powerstats.strength)\n      newPs.speed = newPs.speed + parseInt(hero.powerstats.speed)\n      newPs.durability = newPs.durability + parseInt(hero.powerstats.durability)\n      newPs.power = newPs.power + parseInt(hero.powerstats.power)\n      newPs.combat = newPs.combat + parseInt(hero.powerstats.combat)\n    })\n\n    var statsArray = []\n    \n    for ( property in newPs){\n      statsArray = [...statsArray,{\n        stat: property,\n        value: newPs[property]\n      }]\n    }\n    statsArray.sort((a,b) => (b.value - a.value))\n\n    setPs(statsArray)\n\n  },[heros])\n\n  return (\n    <>\n      <p className=\"display-6\"> PowerStats grupales: </p>\n      <ul className=\"list-group\" style={{width: \"20rem\"}}>\n        {ps.map(p => (\n          <HeroPowerStat data={p} key={p.stat}/>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default HerosPowerStats\n\n\n  /*\n    <li className=\"list-group-item\"> {`Inteligence: ${ps.intelligence.toString()}`} </li>\n    <li className=\"list-group-item\"> {`Strength: ${ps.strength.toString()}`}</li>     \n    <li className=\"list-group-item\"> {`Speed: ${ps.speed.toString()}`}</li>\n    <li className=\"list-group-item\"> {`Durability: ${ps.durability.toString()}`}</li>\n    <li className=\"list-group-item\"> {`Power: ${ps.power.toString()}`}</li>\n    <li className=\"list-group-item\"> {`Combat: ${ps.combat.toString()}`}</li>  \n  */"]},"metadata":{},"sourceType":"module"}