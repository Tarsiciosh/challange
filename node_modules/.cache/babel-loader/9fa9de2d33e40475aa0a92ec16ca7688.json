{"ast":null,"code":"var _jsxFileName = \"/Users/Tar/github/learning/react/06-challenge/src/HeroMain.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport HerosGrid from './HerosGrid';\nimport HerosPowerStats from './HerosPowerStats';\nimport HeroSearch from './HeroSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst myToken = '102141048846123';\n\nconst HeroMain = ({\n  title\n}) => {\n  _s();\n\n  const [token] = useState(myToken);\n  const [isLoading, setIsLoading] = useState(true);\n  const [herosId, setHerosId] = useState([\"644\", \"620\", \"70\"]);\n  const [heros, setHeros] = useState([]);\n  useEffect(() => {\n    async function getHerosInfo() {\n      try {\n        var fetchedHeros = [];\n\n        for (var i = 0; i < herosId.length; i++) {\n          var response = await axios.get(`https://superheroapi.com/api/${token}/${herosId[i]}/`);\n          fetchedHeros = [...fetchedHeros, response.data];\n        }\n\n        setHeros(fetchedHeros);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getHerosInfo();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '3rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"display-5\",\n        children: [\" \", title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HerosGrid, {\n        heros: heros,\n        herosId: herosId,\n        setHerosId: setHerosId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HerosPowerStats, {\n        heros: heros\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HeroSearch, {\n        token: token,\n        heros: heros,\n        herosId: herosId,\n        setHerosId: setHerosId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-6\",\n      style: {\n        margin\n      },\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n\n_s(HeroMain, \"S2uSN3gOnnbVwgg6L82pmXQN7fM=\");\n\n_c = HeroMain;\nexport default HeroMain;\n/*\n { !isLoading ? (\n        <div style={{margin:'3rem'}}> \n          <p className=\"display-5\"> {title} </p>\n            <HerosGrid heros={heros} herosId={herosId} setHerosId={setHerosId} />\n            <HerosPowerStats heros={heros}/> \n            <HeroSearch token={token} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n        </div> \n        ) : ( < )\n      }\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroMain\");","map":{"version":3,"sources":["/Users/Tar/github/learning/react/06-challenge/src/HeroMain.js"],"names":["useState","useEffect","axios","HerosGrid","HerosPowerStats","HeroSearch","myToken","HeroMain","title","token","isLoading","setIsLoading","herosId","setHerosId","heros","setHeros","getHerosInfo","fetchedHeros","i","length","response","get","data","error","console","margin"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,OAAO,GAAG,iBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC5B,QAAM,CAACC,KAAD,IAAUT,QAAQ,CAACM,OAAD,CAAxB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,IAAb,CAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,YAAf,GAA+B;AAC7B,UAAI;AACF,YAAIC,YAAY,GAAG,EAAnB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEN,OAAO,CAACO,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,cAAIE,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAClB,gCAA+BZ,KAAM,IAAGG,OAAO,CAACM,CAAD,CAAI,GADjC,CAArB;AAGAD,UAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBG,QAAQ,CAACE,IAA3B,CAAf;AACD;;AACDP,QAAAA,QAAQ,CAACE,YAAD,CAAR;AACAN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAVD,CAUE,OAAOY,KAAP,EAAa;AACbC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;;AACDP,IAAAA,YAAY;AACb,GAjBQ,CAAT;AAmBA,sBACE;AAAA,cACI,CAACN,SAAD,gBACA;AAAK,MAAA,KAAK,EAAE;AAACe,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,wBAA2BjB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEM,KAAlB;AAAyB,QAAA,OAAO,EAAEF,OAAlC;AAA2C,QAAA,UAAU,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEL,KAAnB;AAA0B,QAAA,KAAK,EAAEK,KAAjC;AAAwC,QAAA,OAAO,EAAEF,OAAjD;AAA0D,QAAA,UAAU,EAAEC;AAAtE;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAOK;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAE;AAACY,QAAAA;AAAD,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AART,mBADF;AAaD,CAtCD;;GAAMlB,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport HerosGrid from './HerosGrid'\nimport HerosPowerStats from './HerosPowerStats'\nimport HeroSearch from './HeroSearch'\n\nconst myToken = '102141048846123'\n\nconst HeroMain = ({title}) => { \n  const [token] = useState(myToken)\n  const [isLoading, setIsLoading] = useState(true)\n  const [herosId, setHerosId] = useState([\"644\",\"620\",\"70\"])\n  const [heros, setHeros] = useState([])\n\n  useEffect(() => { \n    async function getHerosInfo () {   \n      try {      \n        var fetchedHeros = []\n        for (var i = 0; i< herosId.length; i++){\n          var response = await axios.get(\n            `https://superheroapi.com/api/${token}/${herosId[i]}/`\n          )\n          fetchedHeros = [...fetchedHeros, response.data]\n        }\n        setHeros(fetchedHeros)\n        setIsLoading(false) \n      } catch (error){\n        console.error(error)\n      }\n    }\n    getHerosInfo()   \n  })\n\n  return (        \n    <>\n      { !isLoading ? (\n        <div style={{margin:'3rem'}}> \n          <p className=\"display-5\"> {title} </p>\n            <HerosGrid heros={heros} herosId={herosId} setHerosId={setHerosId} />\n            <HerosPowerStats heros={heros}/> \n            <HeroSearch token={token} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n        </div> \n        ) : (<p className=\"display-6\" style={{margin}}>loading...</p>)\n      }\n    </>\n  )\n}\n\nexport default HeroMain\n\n/*\n { !isLoading ? (\n        <div style={{margin:'3rem'}}> \n          <p className=\"display-5\"> {title} </p>\n            <HerosGrid heros={heros} herosId={herosId} setHerosId={setHerosId} />\n            <HerosPowerStats heros={heros}/> \n            <HeroSearch token={token} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n        </div> \n        ) : ( < )\n      }\n*/"]},"metadata":{},"sourceType":"module"}