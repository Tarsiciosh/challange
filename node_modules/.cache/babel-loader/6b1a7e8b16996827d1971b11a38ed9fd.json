{"ast":null,"code":"var _jsxFileName = \"/Users/Tar/github/learning/react/06-challenge/src/HeroSearch.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Formik, Form, useField } from \"formik\";\nimport { useState } from \"react\";\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport HeroPreview from \"./HeroPreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        ...field,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-text\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst HeroSearch = ({\n  token,\n  herosId,\n  setHerosId\n}) => {\n  _s2();\n\n  const [searchedHeros, setSearchedHeros] = useState([]);\n\n  async function getHeros(name) {\n    try {\n      const response = await axios.get(`https://superheroapi.com/api/${token}/search/${name}/`);\n      setSearchedHeros(response.data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      validationSchema: Yup.object({\n        name: Yup.string().max(20, 'Must be 20 characters or less')\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          getHeros(values.name);\n          setSubmitting(false);\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          marginTop: \"2rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"display-6\",\n          children: \"Search your hero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Name\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Superman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), typeof heros !== 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: heros.map(hero => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(HeroPreview, {\n            hero: hero,\n            heros: heros,\n            herosId: herosId,\n            setHerosId: setHerosId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, hero.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : \"no results found\"]\n  }, void 0, true);\n};\n\n_s2(HeroSearch, \"2yYtaZD1NRoCJ51683cMbFZBBes=\");\n\n_c2 = HeroSearch;\nexport default HeroSearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"HeroSearch\");","map":{"version":3,"sources":["/Users/Tar/github/learning/react/06-challenge/src/HeroSearch.js"],"names":["Formik","Form","useField","useState","Yup","axios","HeroPreview","MyTextInput","label","props","field","meta","touched","error","HeroSearch","token","herosId","setHerosId","searchedHeros","setSearchedHeros","getHeros","name","response","get","data","results","console","object","string","max","values","setSubmitting","setTimeout","marginTop","heros","map","hero","id"],"mappings":"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","sourcesContent":["import { Formik, Form, useField} from \"formik\";\nimport { useState } from \"react\";\nimport * as Yup from 'yup';\nimport axios from 'axios'\nimport HeroPreview from \"./HeroPreview\";\n\nconst MyTextInput = ({ label, ...props }) => { \n  const [field, meta] = useField(props); \n  return (\n    <>\n      <div className=\"mb-3\">\n        <input className=\"form-control\" {...field} {...props}/> \n        {meta.touched && meta.error ? (\n          <div className=\"form-text\">{meta.error}</div>\n        ) : null }\n      </div>\n    </>\n  ); \n};\n\nconst HeroSearch = ({token, herosId, setHerosId}) => {\n\n  const [searchedHeros,setSearchedHeros] = useState([])\n\n  async function getHeros (name) {   \n    try {      \n      const response = await axios.get(\n        `https://superheroapi.com/api/${token}/search/${name}/`\n      )\n      setSearchedHeros(response.data.results) \n    } catch (error){\n      console.error(error)\n    }\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={{ \n          name: ''\n        }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .max(20, 'Must be 20 characters or less') \n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            getHeros(values.name)\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        <Form style={{marginTop:\"2rem\"}} >\n          <p className=\"display-6\">Search your hero:</p>  \n          <MyTextInput \n            label=\"Name\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Superman\"   \n          />\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>  \n        </Form>\n      </Formik>\n      <br/>\n      {typeof heros !== 'undefined' ? (\n        <div className=\"container\">\n          <div className =\"row\">\n            {heros.map(hero => (\n              <div className =\"col\" key={hero.id}>\n                <HeroPreview hero={hero} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : \"no results found\"}\n    </> \n  )\n}\n\nexport default HeroSearch"]},"metadata":{},"sourceType":"module"}