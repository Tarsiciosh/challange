{"ast":null,"code":"var _jsxFileName = \"/Users/Tar/github/learning/react/06-challenge/src/HerosLogin.js\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport HeroTextInput from \"./HeroTextImput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('e').required('Requerido'),\n      password: Yup.string().max(15, 'tiene que ser como maximo de 15 caracteres').required('Requerido')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"18rem\",\n          margin: \"10rem\",\n          padding: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            marginTop: \"2rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(HeroTextInput, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\",\n            placeHolder: \"challenge@alkemy.org\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(HeroTextInput, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            placeHolder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nexport default LoginForm;\n/*\n <div className=\"card\" style={{width: \"18rem\", margin:\"1rem\", padding:\"2rem\"}}>\n   \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/Tar/github/learning/react/06-challenge/src/HerosLogin.js"],"names":["Formik","Form","Yup","HeroTextInput","LoginForm","email","password","object","string","required","max","values","setSubmitting","setTimeout","alert","JSON","stringify","width","margin","padding","marginTop"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,gBAAgB,EAAEJ,GAAG,CAACK,MAAJ,CAAW;AAC3BF,MAAAA,KAAK,EAAEH,GAAG,CAACM,MAAJ,GACJH,KADI,CACE,GADF,EAEJI,QAFI,CAEK,WAFL,CADoB;AAI3BH,MAAAA,QAAQ,EAAEJ,GAAG,CAACM,MAAJ,GACPE,GADO,CACH,EADG,EACC,4CADD,EAEPD,QAFO,CAEE,WAFF;AAJiB,KAAX,CALpB;AAaE,IAAA,QAAQ,EAAE,CAACE,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAlBH;AAAA,2BAoBE;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,MAAM,EAAC,OAAxB;AAAiCC,UAAAA,OAAO,EAAC;AAAzC,SAA7B;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAAb;AAAA,kCACE,QAAC,aAAD;AACE,YAAA,KAAK,EAAC,OADR;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,aAAD;AACE,YAAA,KAAK,EAAC,UADR;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,kBAPF,eAaE;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AApBF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA3CD;;KAAMhB,S;AA6CN,eAAeA,SAAf;AAEA;AACA;AACA;AACA","sourcesContent":["import { Formik, Form } from \"formik\"\nimport * as Yup from 'yup'\nimport HeroTextInput from \"./HeroTextImput\"\n\nconst LoginForm = () => {\n  return (\n    <Formik\n      initialValues={{ \n        email: '',\n        password: '',       \n      }}\n      validationSchema={Yup.object({\n        email: Yup.string()\n          .email('e')\n          .required('Requerido'),\n        password: Yup.string()\n          .max(15, 'tiene que ser como maximo de 15 caracteres')\n          .required('Requerido'),        \n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      <>\n      <div className=\"card\" style={{width: \"18rem\", margin:\"10rem\", padding:\"2rem\"}}>\n        <Form style={{marginTop:\"2rem\"}} >\n          <HeroTextInput \n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            placeHolder=\"challenge@alkemy.org\"   \n          />\n          <HeroTextInput \n            label=\"Password\" \n            name=\"password\"\n            type=\"password\"\n            placeHolder=\"\"   \n          />\n          <button className=\"btn btn-primary\" type=\"submit\">Enviar</button>   \n        </Form>\n      </div>\n      </>\n    </Formik>\n  )\n}\n\nexport default LoginForm\n\n/*\n <div className=\"card\" style={{width: \"18rem\", margin:\"1rem\", padding:\"2rem\"}}>\n   \n*/\n"]},"metadata":{},"sourceType":"module"}