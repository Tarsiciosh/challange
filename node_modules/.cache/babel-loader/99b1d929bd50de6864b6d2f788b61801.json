{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport HerosGrid from './HerosGrid';\nimport HerosPowerStats from './HerosPowerStats';\nimport HeroSearch from './HeroSearch';\nimport loginForm from './HerosLogin';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myToken = '102141048846123';\n\nconst HeroMain = ({\n  title\n}) => {\n  _s();\n\n  const [token] = useState(myToken);\n  const [isLoading, setIsLoading] = useState(true);\n  const [herosId, setHerosId] = useState([\"68\", \"720\", \"643\"]);\n  const [heros, setHeros] = useState([]);\n  useEffect(() => {\n    async function getHerosInfo() {\n      try {\n        var fetchedHeros = [];\n\n        for (var i = 0; i < herosId.length; i++) {\n          var response = await axios.get(`https://superheroapi.com/api/${token}/${herosId[i]}/`);\n          fetchedHeros = [...fetchedHeros, response.data];\n        }\n\n        setHeros(fetchedHeros); //setIsLoading(false)\n\n        console.log(\"in Main herosId:\", herosId);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getHerosInfo();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(HeroMain, \"At1S34G32rOKY41pnfdnV7mnHEo=\");\n\n_c = HeroMain;\nexport default HeroMain;\n/*\n { !isLoading ? (\n        <div style={{margin:'3rem'}}> \n          <p className=\"display-5\"> {title} </p>\n            <HerosGrid heros={heros} herosId={herosId} setHerosId={setHerosId} />\n            <HerosPowerStats heros={heros}/> \n            <HeroSearch token={token} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n        </div> \n        ) : ( <loginForm /> )\n      }\n\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroMain\");","map":{"version":3,"sources":["/Users/Tar/github/learning/react/06-challenge/src/HeroMain.js"],"names":["useState","useEffect","axios","HerosGrid","HerosPowerStats","HeroSearch","loginForm","myToken","HeroMain","title","token","isLoading","setIsLoading","herosId","setHerosId","heros","setHeros","getHerosInfo","fetchedHeros","i","length","response","get","data","console","log","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAEA,MAAMC,OAAO,GAAG,iBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC5B,QAAM,CAACC,KAAD,IAAUV,QAAQ,CAACO,OAAD,CAAxB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAC,IAAD,EAAM,KAAN,EAAY,KAAZ,CAAD,CAAtC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,YAAf,GAA+B;AAC7B,UAAI;AACF,YAAIC,YAAY,GAAG,EAAnB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEN,OAAO,CAACO,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,cAAIE,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAClB,gCAA+BZ,KAAM,IAAGG,OAAO,CAACM,CAAD,CAAI,GADjC,CAArB;AAGAD,UAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBG,QAAQ,CAACE,IAA3B,CAAf;AACD;;AACDP,QAAAA,QAAQ,CAACE,YAAD,CAAR,CARE,CASF;;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BZ,OAA/B;AACD,OAXD,CAWE,OAAOa,KAAP,EAAa;AACbF,QAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACF;;AACDT,IAAAA,YAAY;AACb,GAlBQ,CAAT;AAoBA,sBACE,qCADF;AAKD,CA/BD;;GAAMT,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport HerosGrid from './HerosGrid'\nimport HerosPowerStats from './HerosPowerStats'\nimport HeroSearch from './HeroSearch'\nimport loginForm from './HerosLogin'\n\nconst myToken = '102141048846123'\n\nconst HeroMain = ({title}) => { \n  const [token] = useState(myToken)\n  const [isLoading, setIsLoading] = useState(true)\n  const [herosId, setHerosId] = useState([\"68\",\"720\",\"643\"])\n  const [heros, setHeros] = useState([])\n\n  useEffect(() => { \n    async function getHerosInfo () {   \n      try {      \n        var fetchedHeros = []\n        for (var i = 0; i< herosId.length; i++){\n          var response = await axios.get(\n            `https://superheroapi.com/api/${token}/${herosId[i]}/`\n          )\n          fetchedHeros = [...fetchedHeros, response.data]\n        }\n        setHeros(fetchedHeros)\n        //setIsLoading(false)\n        console.log(\"in Main herosId:\",herosId)\n      } catch (error){\n        console.error(error)\n      }\n    }\n    getHerosInfo()   \n  })\n\n  return (        \n    <>\n      \n    </>\n  )\n}\n\nexport default HeroMain\n\n\n/*\n { !isLoading ? (\n        <div style={{margin:'3rem'}}> \n          <p className=\"display-5\"> {title} </p>\n            <HerosGrid heros={heros} herosId={herosId} setHerosId={setHerosId} />\n            <HerosPowerStats heros={heros}/> \n            <HeroSearch token={token} heros={heros} herosId={herosId} setHerosId={setHerosId} />\n        </div> \n        ) : ( <loginForm /> )\n      }\n\n\n*/"]},"metadata":{},"sourceType":"module"}